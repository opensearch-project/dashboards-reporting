name: Release OpenSearch Dashboards Reports Artifacts

on:
  push:
    tags:
      - "v*"

env:
  PLUGIN_NAME: reportsDashboards
  ARTIFACT_NAME: reports-dashboards
  OPENSEARCH_VERSION: '1.0'
  OPENSEARCH_PLUGIN_VERSION: 1.0.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_STAGING_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_STAGING_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Checkout Plugin
        uses: actions/checkout@v1

      - name: Checkout OpenSearch Dashboards
        uses: actions/checkout@v1
        with:
          repository: opensearch-project/Opensearch-Dashboards
          ref: ${{ env.OPENSEARCH_VERSION }}
          path: dashboards-reports/OpenSearch-Dashboards

      - name: Move Dashboards Reports to Plugins Dir
        run: mv dashboards-reports OpenSearch-Dashboards/plugins/${{ env.PLUGIN_NAME }}

      - name: Add Chromium Binary to Reporting for Testing
        run: |
          sudo apt install -y libnss3-dev fonts-liberation libfontconfig1
          cd OpenSearch-Dashboards/plugins/${{ env.PLUGIN_NAME }}
          wget https://github.com/opendistro-for-elasticsearch/kibana-reports/releases/download/chromium-1.12.0.0/chromium-linux-x64.zip
          unzip chromium-linux-x64.zip
          rm chromium-linux-x64.zip

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: './OpenSearch-Dashboards/.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Yarn
        # Need to use bash to avoid having a windows/linux specific step
        shell: bash
        run: |
          YARN_VERSION=$(node -p "require('./OpenSearch-Dashboards/package.json').engines.yarn")
          echo "Installing yarn@$YARN_VERSION"
          npm i -g yarn@$YARN_VERSION

      - run: node -v
      - run: yarn -v

      - name: OpenSearch Dashboards Plugin Bootstrap
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: cd OpenSearch-Dashboards/plugins/${{ env.PLUGIN_NAME }}; yarn osd bootstrap

      - name: Test
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: cd OpenSearch-Dashboards/plugins/${{ env.PLUGIN_NAME }}; yarn test

      - name: Build Artifact and upload to S3
        run: |
          cd OpenSearch-Dashboards/plugins/${{ env.PLUGIN_NAME }}
          yarn build

          cd build
          mkdir -p ./{linux-x64,linux-arm64,windows-x64}/OpenSearch-Dashboards/${{ env.PLUGIN_NAME }}
          cp ./${{ env.PLUGIN_NAME }}-*.zip ./linux-x64/${{ env.ARTIFACT_NAME }}-${{ env.OPENSEARCH_PLUGIN_VERSION }}-linux-x64.zip
          cp ./${{ env.PLUGIN_NAME }}-*.zip ./linux-arm64/${{ env.ARTIFACT_NAME }}-${{ env.OPENSEARCH_PLUGIN_VERSION }}-linux-arm64.zip
          mv ./${{ env.PLUGIN_NAME }}-*.zip ./windows-x64/${{ env.ARTIFACT_NAME }}-${{ env.OPENSEARCH_PLUGIN_VERSION }}-windows-x64.zip

          s3_prefix="s3://staging.artifacts.opendistroforelasticsearch.amazon.com/snapshots/kibana-plugins/reports/"

          cd linux-x64
          wget https://github.com/opensearch-project/dashboards-reports/releases/download/chromium-1.12.0.0/chromium-linux-x64.zip
          unzip chromium-linux-x64.zip -d ./OpenSearch-Dashboards/${{ env.PLUGIN_NAME }}
          rm chromium-linux-x64.zip
          zip -ur ./${{ env.ARTIFACT_NAME }}-*.zip ./OpenSearch-Dashboards
          linux_x64_artifact=`ls ./${{ env.ARTIFACT_NAME }}-${{ env.OPENSEARCH_PLUGIN_VERSION }}-linux-x64.zip`

          #Inject build number before the suffix and upload to S3
          linux_x64_artifact_outfile=`basename ${linux_x64_artifact%.zip}-build-${GITHUB_RUN_NUMBER}.zip`
          echo "Copying $linux_x64_artifact to ${s3_prefix}${linux_x64_artifact_outfile}"
          aws s3 cp --quiet $linux_x64_artifact ${s3_prefix}${linux_x64_artifact_outfile}
          cd ..

          cd linux-arm64
          wget https://github.com/opensearch-project/dashboards-reports/releases/download/chromium-1.12.0.0/chromium-linux-arm64.zip
          unzip chromium-linux-arm64.zip -d ./OpenSearch-Dashboards/${{ env.PLUGIN_NAME }}
          rm chromium-linux-arm64.zip
          zip -ur ./${{ env.ARTIFACT_NAME }}-*.zip ./OpenSearch-Dashboards
          linux_arm64_artifact=`ls ./${{ env.ARTIFACT_NAME }}-${{ env.OPENSEARCH_PLUGIN_VERSION }}-linux-arm64.zip`

          #Inject build number before the suffix and upload to S3
          linux_arm64_artifact_outfile=`basename ${linux_arm64_artifact%.zip}-build-${GITHUB_RUN_NUMBER}.zip`
          echo "Copying $linux_arm64_artifact to ${s3_prefix}${linux_arm64_artifact_outfile}"
          aws s3 cp --quiet $linux_arm64_artifact ${s3_prefix}${linux_arm64_artifact_outfile}
          cd ..

          cd windows-x64
          wget https://github.com/opensearch-project/dashboards-reports/releases/download/chromium-1.12.0.0/chromium-windows-x64.zip
          unzip chromium-windows-x64.zip -d ./OpenSearch-Dashboards/${{ env.PLUGIN_NAME }}
          rm chromium-windows-x64.zip
          zip -ur ./${{ env.ARTIFACT_NAME }}-*.zip ./OpenSearch-Dashboards
          windows_x64_artifact=`ls ./${{ env.ARTIFACT_NAME }}-${{ env.OPENSEARCH_PLUGIN_VERSION }}-windows-x64.zip`

          #Inject build number before the suffix and upload to S3
          windows_x64_artifact_outfile=`basename ${windows_x64_artifact%.zip}-build-${GITHUB_RUN_NUMBER}.zip`
          echo "Copying $windows_x64_artifact to ${s3_prefix}${windows_x64_artifact_outfile}"
          aws s3 cp --quiet $windows_x64_artifact ${s3_prefix}${windows_x64_artifact_outfile}
